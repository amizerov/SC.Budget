//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SC.Common.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC.Common.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap about_32x32 {
            get {
                object obj = ResourceManager.GetObject("about_32x32", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа DevExpress.Utils.Svg.SvgImage.
        /// </summary>
        internal static DevExpress.Utils.Svg.SvgImage bo_security_permission {
            get {
                object obj = ResourceManager.GetObject("bo_security_permission", resourceCulture);
                return ((DevExpress.Utils.Svg.SvgImage)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа DevExpress.Utils.Svg.SvgImage.
        /// </summary>
        internal static DevExpress.Utils.Svg.SvgImage bo_user {
            get {
                object obj = ResourceManager.GetObject("bo_user", resourceCulture);
                return ((DevExpress.Utils.Svg.SvgImage)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на declare @role_ID int;
        ///--declare @userId int = 54
        ///
        ///select  @role_ID = u.Role_ID
        ///from [User] u	
        ///where u.ID = @userId
        ///
        ///if @role_ID = 5 --manager
        ///	select distinct u.*
        ///	from [User] u
        ///		join Project pr on pr.Rukovod_ID = u.ID
        ///		join Object obj on obj.Project_ID = pr.ID
        ///	where obj.Manager_ID = @userId
        ///else if @role_ID = 4 --rukovod
        ///	select *
        ///	from [User]	where Role_ID = 6.
        /// </summary>
        internal static string Bosses {
            get {
                return ResourceManager.GetString("Bosses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Delete {
            get {
                object obj = ResourceManager.GetObject("Delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на delete Nakladnaya
        ///where not exists (select * from NakladLine l where l.Naklad_ID = Nakladnaya.ID).
        /// </summary>
        internal static string DeleteEmptyNaklads {
            get {
                return ResourceManager.GetString("DeleteEmptyNaklads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Edit {
            get {
                object obj = ResourceManager.GetObject("Edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Input {
            get {
                object obj = ResourceManager.GetObject("Input", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare
        ///--@userId int = 1
        ///
        ///select top (1) *
        ///from RequestOP
        ///where User_ID = @userId
        ///	order by DateTime desc.
        /// </summary>
        internal static string LastRequest_Out {
            get {
                return ResourceManager.GetString("LastRequest_Out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap login {
            get {
                object obj = ResourceManager.GetObject("login", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare 
        ///--@rukId int = 63
        ///
        ///select *
        ///from [User] u
        ///where exists (select o.* 
        ///			from Object o
        ///				join Project p on p.ID = o.Project_ID
        ///			where o.Manager_ID = u.ID
        ///					and p.Rukovod_ID = @rukId).
        /// </summary>
        internal static string Managers {
            get {
                return ResourceManager.GetString("Managers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap my {
            get {
                object obj = ResourceManager.GetObject("my", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap New {
            get {
                object obj = ResourceManager.GetObject("New", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap noMy {
            get {
                object obj = ResourceManager.GetObject("noMy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare @projectIds int = 124;
        ///--declare @firmaId int = 1;
        ///
        ///with objs as (
        ///	select &apos;Object &apos; + CAST(obj.ID AS nvarchar)  ViewModelID
        ///		,&apos;Project &apos; + CAST(obj.Project_ID AS nvarchar) ParentID
        ///		,1 Type
        ///		,p.ID Project_ID
        ///		,obj.ID Object_ID
        ///		,1 ObjectsCount
        ///		,obj.Name Name
        ///		,obj.Address Address
        ///		,u.Name RukovodName
        ///	from Object obj
        ///		join [User] u on obj.Manager_ID = u.ID 
        ///		join Project p on obj.Project_ID = p.ID
        ///    where obj.IsDeleted = 0 and obj.Status = 0
        ///		and p.ID in (@projectId [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string ObjectProjectTree {
            get {
                return ResourceManager.GetString("ObjectProjectTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare @accId int = 13;
        ///--declare @start datetime = Cast(&apos;20190101&apos; as datetime);
        ///--declare @end datetime = Cast(&apos;20200101&apos; as datetime);
        ///
        ///with outOp as (
        ///
        ///--declare @accId int = 13
        ///
        ///	select op.*
        ///		,op.Amount OutAmount
        ///		,(case when toAcc.IsPassive = 1 then toAcc.NameForPassive else toUser.Name end) ToUser
        ///		,(case when toAcc.IsPassive = 1 then -1 else toUser.Role_ID end) ToRole
        ///		,(case when toAcc.IsPassive = 0 then toUser.Login end) ToLogin
        ///		,null InAmount
        ///		,(case when op.To_ID is null  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Operations {
            get {
                return ResourceManager.GetString("Operations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare @position_ID int = 22;
        ///--declare @object_ID int = 1;
        ///
        ///select top(1) p.*, o.Summa Salary
        ///from Position p 
        ///	Left outer Join Oklad o on o.Position_ID = p.ID
        ///		and o.Object_ID = @object_ID
        ///where p.ID = @position_ID.
        /// </summary>
        internal static string Positions {
            get {
                return ResourceManager.GetString("Positions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap save {
            get {
                object obj = ResourceManager.GetObject("save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SCAS {
            get {
                object obj = ResourceManager.GetObject("SCAS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SCAS_DemoCover1 {
            get {
                object obj = ResourceManager.GetObject("SCAS_DemoCover1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare @id int = null;
        ///--declare @start datetime = &apos;20200101&apos;;
        ///--declare @end datetime = &apos;20200801&apos;;
        ///--declare @oplataStart datetime = &apos;20200101&apos;;
        ///--declare @oplataEnd datetime = &apos;20200801&apos;;
        ///--declare @isDeleted int = 0;
        ///
        ///select s.*
        ///	,su.Name SupplierName
        ///	,d.Name DetailName
        ///	,r.Name StRashName
        ///	,p.Name ProjectName
        ///	,f.Name FirmaName
        ///	,(select max(Data) from Oplata where Schet_ID = s.ID) OplataDate
        ///	,s.Summa - isnull((select SUM(Summa) from Oplata where Schet_ID = s.ID and Summa &gt; 0), 0) Re [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Scheta {
            get {
                return ResourceManager.GetString("Scheta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа DevExpress.Utils.Svg.SvgImage.
        /// </summary>
        internal static DevExpress.Utils.Svg.SvgImage security_unlock {
            get {
                object obj = ResourceManager.GetObject("security_unlock", resourceCulture);
                return ((DevExpress.Utils.Svg.SvgImage)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap sklad_icon {
            get {
                object obj = ResourceManager.GetObject("sklad_icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --declare 
        ///--@userId int = 63
        ///
        ///select u.*, r.Name RoleName
        ///from [User] u
        ///	join Role r on r.ID = u.Role_ID
        ///where @userId = 0 or u.ID = @userId.
        /// </summary>
        internal static string Users {
            get {
                return ResourceManager.GetString("Users", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap НетФильтра {
            get {
                object obj = ResourceManager.GetObject("НетФильтра", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
