//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SC.Budget.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC.Budget.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
        /// </summary>
        internal static DevExpress.Utils.Svg.SvgImage bo_dashboard {
            get {
                object obj = ResourceManager.GetObject("bo_dashboard", resourceCulture);
                return ((DevExpress.Utils.Svg.SvgImage)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Cash {
            get {
                object obj = ResourceManager.GetObject("Cash", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap kpi_16x16 {
            get {
                object obj = ResourceManager.GetObject("kpi_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap kpi_32x32 {
            get {
                object obj = ResourceManager.GetObject("kpi_32x32", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap login {
            get {
                object obj = ResourceManager.GetObject("login", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @object_Id int = 1074;
        ///--declare @year int = 2020;
        ///declare @month int = 1;
        ///declare @res table (Expense decimal, Income decimal);
        ///
        ///while @month &lt;= 12
        ///begin
        ///	insert @res values(
        ///		
        ///		isnull((select sum(l.Quantity * (p.Price + isnull(p.PriceAdditional, 0))) from NakladLine l
        ///			join Nakladnaya n on l.Naklad_ID = n .ID
        ///				and Year(n.DocDate) = @year and Month(n.DocDate) = @month
        ///				and n.Object_ID = @object_Id
        ///			join Postupleniya p on l.Postup_ID = p.ID), 0)
        ///		+ isnull((select sum(res [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MarginalityObject {
            get {
                return ResourceManager.GetString("MarginalityObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @projectId int = 2
        ///--declare @month datetime = Cast(&apos;20191201&apos; as datetime)
        ///
        ///select nl.*
        ///	,p.Price * nl.Quantity Cost
        ///from Object obj 
        ///	join Nakladnaya n on n.Object_ID = obj.ID
        ///				and YEAR(n.DocDate) = YEAR(@month)
        ///				and MONTH(n.DocDate) = MONTH(@month)
        ///	join NakladLine nl on nl.Naklad_ID = n.ID
        ///	join Postupleniya p on nl.Postup_ID = p.ID				
        ///where obj.Project_ID = @projectId 
        ///	and obj.Status = 0.
        /// </summary>
        internal static string NakladLineForMarginality {
            get {
                return ResourceManager.GetString("NakladLineForMarginality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Object {
            get {
                object obj = ResourceManager.GetObject("Object", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @accId int = 13;
        ///--declare @start datetime = Cast(&apos;20190101&apos; as datetime);
        ///--declare @end datetime = Cast(&apos;20200101&apos; as datetime);
        ///
        ///with outOp as (
        ///
        ///--declare
        ///--@accId int = 13
        ///
        ///	select op.*
        ///		,op.Amount OutAmount
        ///		,toUser.Name ToUser
        ///		,null InAmount
        ///		,null FromUser
        ///	from Operation op
        ///		left join Account toAcc on toAcc.ID = op.To_ID
        ///		left join [User] toUser on toUser.ID = toAcc.User_ID
        ///	where op.From_ID = @accId 
        ///		and op.Status = 0
        ///		and op.ToResOP_ID is null
        ///		and CAST(op [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Operations {
            get {
                return ResourceManager.GetString("Operations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap pielabelsdatalabels_16x16 {
            get {
                object obj = ResourceManager.GetObject("pielabelsdatalabels_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap pielabelsdatalabels_32x32 {
            get {
                object obj = ResourceManager.GetObject("pielabelsdatalabels_32x32", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare
        ///--@userId int = 0,
        ///--@month datetime = Cast(&apos;20191001&apos; as datetime);
        ///
        ///select SUM(p.Quantity * p.Price) Cost, pr.Name ProjectName
        ///from Project pr 
        ///	left join Object obj on obj.Project_ID = pr.ID
        ///	left join Nakladnaya n on n.Object_ID = obj.ID
        ///	left join (select * from Postupleniya pos
        ///				where YEAR(pos.DocDate) = YEAR(@month)
        ///				  and MONTH(pos.DocDate) = MONTH(@month)) p on p.Naklad = n.DocNumber
        ///where pr.IsDeleted = 0
        ///	  and obj.Status = 0
        ///group by pr.Name
        ///order by pr.Name.
        /// </summary>
        internal static string Postupleniya {
            get {
                return ResourceManager.GetString("Postupleniya", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Proda {
            get {
                object obj = ResourceManager.GetObject("Proda", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @userId int = 0;
        ///
        ///select distinct pr.ID, pr.Name, pr.Rukovod_ID
        ///from Project pr
        ///	join Object obj on obj.Project_ID = pr.ID
        ///where (@userId = 0 or pr.Rukovod_ID = @userId)
        ///	  and pr.IsDeleted = 0
        ///	  and obj.Status = 0
        ///order by pr.Name.
        /// </summary>
        internal static string Projects {
            get {
                return ResourceManager.GetString("Projects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @project_ID int = 2
        ///--declare @month datetime = Cast(&apos;20200701&apos; as datetime)
        ///
        ///select resOp.*
        ///	,r.User_ID
        ///	,u.Role_ID 
        ///	,r.OfficialSalary
        ///from ResOP resOp
        ///	join Object obj on resOp.Object_ID = obj.ID
        ///	join Project p on obj.Project_ID = p.ID and p.ID = @project_ID
        ///	left join Resource r on resOp.Resource_ID = r.ID
        ///	left join [User] u on r.User_ID = u.ID
        ///where YEAR(resOp.Month) = YEAR(@month)
        ///	and MONTH(resOp.Month) = MONTH(@month).
        /// </summary>
        internal static string ResOPsForKPI {
            get {
                return ResourceManager.GetString("ResOPsForKPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare
        ///--@userId int = 0,
        ///--@month datetime = Cast(&apos;20191001&apos; as datetime);
        ///
        ///select obj.Address ObjectName
        ///	,Sum(case when r.RateDays is null or r.RateDays = 0	then 0
        ///			else Round(ISNULL(okl.Summa, 0) / r.RateDays * ISNULL(r.FactDays, 0) + ISNULL(r.Premium, 0), 0)
        ///			end) Calculated
        ///	,Sum(Round(ISNULL(r.Avans, 0), 0)) Avans
        ///	,Sum(Round(ISNULL(r.Premium, 0), 0)) Premium
        ///	,Sum(Round(ISNULL(r.Docs, 0), 0)) Docs
        ///	,Sum(Round(ISNULL(r.MedBook, 0), 0)) MedBook
        ///	,Sum(Round(ISNULL(r.SpecWear, 0), 0)) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ResOPsForManager {
            get {
                return ResourceManager.GetString("ResOPsForManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare
        ///--@userId int = 0,
        ///--@month datetime = Cast(&apos;20191001&apos; as datetime);
        ///
        ///select pr.Name ObjectName
        ///	,Sum(case when r.RateDays is null or r.RateDays = 0 then 0
        ///			else Round(ISNULL(okl.Summa, 0) / r.RateDays * ISNULL(r.FactDays, 0) + ISNULL(r.Premium, 0), 0)
        ///			end) Calculated
        ///	,Sum(Round(ISNULL(r.Avans, 0), 0)) Avans
        ///	,Sum(Round(ISNULL(r.Premium, 0), 0)) Premium
        ///	,Sum(Round(ISNULL(r.Docs, 0), 0)) Docs
        ///	,Sum(Round(ISNULL(r.MedBook, 0), 0)) MedBook
        ///	,Sum(Round(ISNULL(r.SpecWear, 0), 0)) Spe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ResOPsForRukovod {
            get {
                return ResourceManager.GetString("ResOPsForRukovod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @userId int = 117;
        ///--declare @month datetime = Cast(&apos;20191201&apos; as datetime);
        ///declare @roleId int;
        ///
        ///select @roleId = Role_ID from [User] where ID = @userId
        ///
        ///if @roleId = 0 or @roleId = 6
        ///	select distinct r.*, u.Role_ID Role
        ///	from Resource r
        ///		join ResOP on ResOP.Resource_ID = r.ID
        ///			and Year(ResOP.Month) = Year(@month)
        ///			and Month(ResOP.Month) = Month(@month)
        ///		left join [User] u on r.User_ID = u.ID
        ///else if @roleId = 4
        ///	select distinct r.*, u.Role_ID Role
        ///	from Resource r
        ///		join R [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Resources_ {
            get {
                return ResourceManager.GetString("Resources.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @userId int = 0;
        ///--declare @month datetime = Cast(&apos;20191201&apos; as datetime);
        ///
        ///select pr.Name ProjectName
        ///	,pr.IsCash IsCash
        ///	,Sum(s.Summa) Summa
        ///	,Sum(s.Oplata) Oplata
        ///from Project pr
        ///	left join Scheta s on s.Project_ID = pr.ID
        ///		and Year(s.DataCreate) = Year(@month)
        ///		and Month(s.DataCreate) = Month(@month)
        ///where pr.IsDeleted = 0
        ///group by pr.Name, pr.IsCash
        ///order by pr.Name.
        /// </summary>
        internal static string Scheta {
            get {
                return ResourceManager.GetString("Scheta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @userId int = 0;
        ///--declare @month datetime = Cast(&apos;20191201&apos; as datetime);
        ///
        ///select pr.Name ProjectName
        ///	,Sum(s.Summa) Summa
        ///	,Sum(s.Oplata) Oplata
        ///from Project pr
        ///	left join SchetaProda s on s.Project_ID = pr.ID
        ///		and Year(s.DataCreate) = Year(@month)
        ///		and Month(s.DataCreate) = Month(@month)
        ///where pr.IsDeleted = 0
        ///group by pr.Name
        ///order by pr.Name.
        /// </summary>
        internal static string SchetaProda {
            get {
                return ResourceManager.GetString("SchetaProda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare
        ///--@userId int = 0,
        ///--@month datetime = Cast(&apos;20191001&apos; as datetime);
        ///
        ///select pr.ID
        ///	,pr.Name ProjectName
        ///	,Sum(sch.Summa) Summa
        ///from Project pr 
        ///	left join (select * from SchetProdaLine s 
        ///	--left join Object obj on obj.Project_ID = pr.ID
        ///		where YEAR(s.dtc) = YEAR(@month)
        ///			and MONTH(s.dtc) = MONTH(@month)) sch on sch.Object_ID = obj.ID
        ///where (@userId = 0 or pr.Rukovod_ID = @userId)
        ///	  and pr.IsDeleted = 0
        ///	  --and obj.Status = 0
        ///group by pr.ID, pr.Name
        ///order by pr.Name.
        /// </summary>
        internal static string SchetProdaLines {
            get {
                return ResourceManager.GetString("SchetProdaLines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @projectId int = 0;
        ///--declare @year int = 2020;
        ///
        ///select distinct d.Class
        ///from Detail d
        ///	join Scheta s on s.Detail_ID = d.ID
        ///		and YEAR(s.DataCreate) = @year
        ///		and s.IsDeleted = 0
        ///		and s.Oplata &gt; 0
        ///		and s.Project_ID =  @projectId.
        /// </summary>
        internal static string SchetsCategoriesForKPI {
            get {
                return ResourceManager.GetString("SchetsCategoriesForKPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @userId int = 0;
        ///--declare @month datetime = Cast(&apos;20191001&apos; as datetime);
        ///
        ///select distinct d.Class
        ///from Detail d
        ///	join Scheta s on s.Detail_ID = d.ID
        ///		and YEAR(s.DataCreate) = YEAR(@month)
        ///		and MONTH(s.DataCreate) = MONTH(@month)
        ///		and s.IsDeleted = 0
        ///	join Project p on s.Project_ID = p.ID
        ///		and (@userId = 0 or p.Rukovod_ID = @userId)
        ///		and p.IsDeleted = 0
        ///	join Object obj on obj.Project_ID = p.ID
        ///		and obj.Status = 0
        ///.
        /// </summary>
        internal static string SchetsCategoriesForMarginality {
            get {
                return ResourceManager.GetString("SchetsCategoriesForMarginality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @projectId int = 0;
        ///--declare @month datetime = Cast(&apos;20191001&apos; as datetime);
        ///
        ///select s.*
        ///	, ISNULL(d.Class, 0) Class
        ///from Scheta s
        ///	left join Detail d on s.Detail_ID = d.ID
        ///where YEAR(s.DataCreate) = YEAR(@month)
        ///		and MONTH(s.DataCreate) = MONTH(@month)
        ///		and s.IsDeleted = 0
        ///		and s.Project_ID = @projectId.
        /// </summary>
        internal static string SchetsForMarginality {
            get {
                return ResourceManager.GetString("SchetsForMarginality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Tabel {
            get {
                object obj = ResourceManager.GetObject("Tabel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Upd60 {
            get {
                object obj = ResourceManager.GetObject("Upd60", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Zakup {
            get {
                object obj = ResourceManager.GetObject("Zakup", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Объект {
            get {
                object obj = ResourceManager.GetObject("Объект", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Покупки2 {
            get {
                object obj = ResourceManager.GetObject("Покупки2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Продажи {
            get {
                object obj = ResourceManager.GetObject("Продажи", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Табель {
            get {
                object obj = ResourceManager.GetObject("Табель", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
